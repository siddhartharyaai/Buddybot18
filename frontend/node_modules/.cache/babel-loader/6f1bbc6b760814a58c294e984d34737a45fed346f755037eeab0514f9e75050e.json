{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/components/ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { MicrophoneIcon, StopIcon, PaperAirplaneIcon, SpeakerWaveIcon, SpeakerXMarkIcon, SparklesIcon, ChatBubbleLeftEllipsisIcon, EyeIcon, EyeSlashIcon, SunIcon, MoonIcon, Cog6ToothIcon } from '@heroicons/react/24/outline';\nimport toast from 'react-hot-toast';\nimport TextInput from './TextInput';\nimport VoiceControl from './VoiceControl';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatInterface = ({\n  user,\n  darkMode,\n  setDarkMode,\n  sessionId,\n  onSendMessage\n}) => {\n  _s();\n  const [isAmbientListening, setIsAmbientListening] = useState(false);\n  const [isConversationActive, setIsConversationActive] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [textInput, setTextInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [listeningState, setListeningState] = useState('inactive'); // inactive, ambient, active\n  const [wakeWordDetected, setWakeWordDetected] = useState(false);\n  const [isBotSpeaking, setIsBotSpeaking] = useState(false);\n  const [currentTranscript, setCurrentTranscript] = useState('');\n  const [botMood, setBotMood] = useState('friendly'); // friendly, excited, calm, thinking\n\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const messagesEndRef = useRef(null);\n  const audioRef = useRef(null);\n  const ambientRecorderRef = useRef(null);\n  const ambientIntervalRef = useRef(null);\n  const suggestions = [\"Tell me a story\", \"Sing a song\", \"What's a fun fact?\", \"Let's play a game\", \"Help me learn something\"];\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  useEffect(() => {\n    console.log('🎯 ChatInterface component mounted - NOT auto-starting ambient listening');\n\n    // Don't auto-start ambient listening - wait for user gesture\n    setListeningState('inactive');\n\n    // Cleanup on unmount\n    return () => {\n      stopAmbientListening();\n      if (ambientIntervalRef.current) {\n        clearInterval(ambientIntervalRef.current);\n      }\n    };\n  }, []);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const startAmbientListening = async stream => {\n    try {\n      console.log('🎤 Starting ambient listening with provided stream...');\n      console.log('User ID:', user === null || user === void 0 ? void 0 : user.id);\n      console.log('Session ID:', sessionId);\n\n      // Start ambient listening on server\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/ambient/start`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          session_id: sessionId,\n          user_id: (user === null || user === void 0 ? void 0 : user.id) || (user === null || user === void 0 ? void 0 : user.user_id) || 'test_user'\n        })\n      });\n      if (response.ok) {\n        setIsAmbientListening(true);\n        setListeningState('ambient');\n\n        // Start continuous audio processing with the provided stream\n        startContinuousAudioProcessing(stream);\n        toast.success('🎤 Voice activated! Say \"Hey Buddy\" to start chatting.');\n        console.log('✅ Ambient listening started successfully');\n        return true; // Return success\n      } else {\n        const errorData = await response.json();\n        console.error('❌ Server error starting ambient listening:', errorData);\n        throw new Error(`Failed to start ambient listening: ${errorData.detail || 'Unknown error'}`);\n      }\n    } catch (error) {\n      console.error('❌ Error starting ambient listening:', error);\n      setListeningState('inactive');\n      toast.error('Failed to start voice features. Please try again.');\n      return false; // Return failure\n    }\n  };\n  const stopAmbientListening = async () => {\n    try {\n      await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/ambient/stop`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          session_id: sessionId\n        })\n      });\n      setIsAmbientListening(false);\n      setIsConversationActive(false);\n      setListeningState('inactive');\n\n      // Stop audio processing\n      if (ambientRecorderRef.current) {\n        ambientRecorderRef.current.stop();\n      }\n      if (ambientIntervalRef.current) {\n        clearInterval(ambientIntervalRef.current);\n      }\n    } catch (error) {\n      console.error('Error stopping ambient listening:', error);\n    }\n  };\n\n  // Stop continuous audio processing to prevent re-renders\n  const startContinuousAudioProcessing = stream => {\n    console.log('🎤 Starting continuous audio processing...');\n    ambientRecorderRef.current = new MediaRecorder(stream, {\n      mimeType: 'audio/webm;codecs=opus'\n    });\n    ambientRecorderRef.current.ondataavailable = event => {\n      if (event.data.size > 0) {\n        // Only process audio if we're still in ambient listening mode\n        if (isAmbientListening && listeningState === 'ambient') {\n          processAmbientAudio(event.data);\n        }\n      }\n    };\n    ambientRecorderRef.current.start(2000); // 2-second chunks\n\n    // Set up interval to restart recording (prevent memory issues)\n    ambientIntervalRef.current = setInterval(() => {\n      if (ambientRecorderRef.current && isAmbientListening) {\n        try {\n          ambientRecorderRef.current.stop();\n          setTimeout(() => {\n            if (ambientRecorderRef.current && isAmbientListening) {\n              ambientRecorderRef.current.start(2000);\n            }\n          }, 100);\n        } catch (error) {\n          console.error('Error restarting recorder:', error);\n        }\n      }\n    }, 10000); // Restart every 10 seconds instead of processing continuously\n  };\n  const processAmbientAudio = async audioData => {\n    try {\n      let base64Audio;\n\n      // Handle different audio data types\n      if (typeof audioData === 'string') {\n        base64Audio = audioData;\n      } else {\n        // Convert Blob to base64\n        const reader = new FileReader();\n        return new Promise(resolve => {\n          reader.onloadend = async () => {\n            base64Audio = reader.result.split(',')[1];\n            await sendAudioToBackend(base64Audio);\n            resolve();\n          };\n          reader.readAsDataURL(audioData);\n        });\n      }\n      await sendAudioToBackend(base64Audio);\n    } catch (error) {\n      console.error('Error processing ambient audio:', error);\n    }\n  };\n  const sendAudioToBackend = async base64Audio => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/ambient/process`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          session_id: sessionId,\n          audio_base64: base64Audio\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        handleAmbientResponse(data);\n      } else {\n        console.warn('Ambient processing request failed:', response.status);\n      }\n    } catch (error) {\n      console.error('Error sending audio to backend:', error);\n    }\n  };\n  const handleAmbientResponse = data => {\n    const {\n      status,\n      transcript,\n      listening_state,\n      conversation_response,\n      has_response\n    } = data;\n\n    // Only update listening state if it has changed\n    setListeningState(prevState => {\n      if (prevState !== listening_state) {\n        return listening_state;\n      }\n      return prevState;\n    });\n    if (status === 'wake_word_detected') {\n      setWakeWordDetected(true);\n      setIsConversationActive(true);\n\n      // Add wake word message\n      const wakeWordMessage = {\n        id: Date.now(),\n        type: 'system',\n        content: `Wake word detected: \"${transcript}\"`,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, wakeWordMessage]);\n\n      // Add AI response if available\n      if (has_response && conversation_response) {\n        const aiMessage = {\n          id: Date.now() + 1,\n          type: 'ai',\n          content: conversation_response.response_text,\n          audioData: conversation_response.response_audio,\n          timestamp: new Date()\n        };\n        setMessages(prev => [...prev, aiMessage]);\n\n        // Play audio response\n        if (conversation_response.response_audio) {\n          playAudio(conversation_response.response_audio);\n        }\n      }\n\n      // Clear wake word detection after 3 seconds\n      setTimeout(() => setWakeWordDetected(false), 3000);\n    } else if (status === 'conversation_active' && has_response) {\n      // Add user message\n      const userMessage = {\n        id: Date.now(),\n        type: 'user',\n        content: transcript,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, userMessage]);\n\n      // Add AI response\n      const aiMessage = {\n        id: Date.now() + 1,\n        type: 'ai',\n        content: conversation_response.response_text,\n        audioData: conversation_response.response_audio,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, aiMessage]);\n\n      // Play audio response\n      if (conversation_response.response_audio) {\n        playAudio(conversation_response.response_audio);\n      }\n    } else if (status === 'conversation_ended' || status === 'conversation_timeout') {\n      setIsConversationActive(false);\n      const endMessage = {\n        id: Date.now(),\n        type: 'system',\n        content: status === 'conversation_timeout' ? 'Conversation timed out. Say \"Hey Buddy\" to start again.' : 'Conversation ended. Say \"Hey Buddy\" to start again.',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, endMessage]);\n    }\n  };\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      audioChunksRef.current = [];\n      mediaRecorderRef.current.ondataavailable = event => {\n        audioChunksRef.current.push(event.data);\n      };\n      mediaRecorderRef.current.onstop = () => {\n        const audioBlob = new Blob(audioChunksRef.current, {\n          type: 'audio/wav'\n        });\n        sendVoiceMessage(audioBlob);\n        stream.getTracks().forEach(track => track.stop());\n      };\n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n    } catch (error) {\n      toast.error('Microphone access denied');\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n    }\n  };\n  const sendVoiceMessage = async audioBlob => {\n    const reader = new FileReader();\n    reader.onloadend = async () => {\n      const base64Audio = reader.result.split(',')[1];\n      const userMessage = {\n        id: Date.now(),\n        type: 'user',\n        content: 'Voice message',\n        isVoice: true,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, userMessage]);\n      setIsLoading(true);\n      try {\n        const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/conversations/voice`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            session_id: sessionId,\n            user_id: user.id,\n            audio_base64: base64Audio\n          })\n        });\n        const data = await response.json();\n        if (response.ok) {\n          const aiMessage = {\n            id: Date.now() + 1,\n            type: 'ai',\n            content: data.response_text,\n            audioData: data.response_audio,\n            contentType: data.content_type,\n            metadata: data.metadata,\n            timestamp: new Date()\n          };\n          setMessages(prev => [...prev, aiMessage]);\n\n          // Auto-play AI response\n          if (data.response_audio) {\n            playAudio(data.response_audio);\n          }\n        } else {\n          throw new Error(data.detail || 'Failed to send voice message');\n        }\n      } catch (error) {\n        toast.error('Failed to send voice message');\n        console.error('Voice message error:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    reader.readAsDataURL(audioBlob);\n  };\n  const sendTextMessage = async e => {\n    e.preventDefault();\n    if (!textInput.trim() || isLoading) return;\n\n    // Store the message content before clearing\n    const messageContent = textInput.trim();\n    const userMessage = {\n      id: Date.now(),\n      type: 'user',\n      content: messageContent,\n      isVoice: false,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setTextInput(''); // Clear input after storing the message\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/conversations/text`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          session_id: sessionId,\n          user_id: user.id,\n          message: messageContent // Use stored message content\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        const aiMessage = {\n          id: Date.now() + 1,\n          type: 'ai',\n          content: data.response_text,\n          audioData: data.response_audio,\n          contentType: data.content_type,\n          metadata: data.metadata,\n          timestamp: new Date()\n        };\n        setMessages(prev => [...prev, aiMessage]);\n\n        // Auto-play AI response\n        if (data.response_audio) {\n          playAudio(data.response_audio);\n        }\n      } else {\n        throw new Error(data.detail || 'Failed to send message');\n      }\n    } catch (error) {\n      toast.error('Failed to send message');\n      console.error('Text message error:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const playAudio = base64Audio => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n    }\n    const audioBlob = new Blob([Uint8Array.from(atob(base64Audio), c => c.charCodeAt(0))], {\n      type: 'audio/wav'\n    });\n    const audioUrl = URL.createObjectURL(audioBlob);\n    audioRef.current = new Audio(audioUrl);\n    audioRef.current.play();\n    setIsPlaying(true);\n    setIsBotSpeaking(true);\n    audioRef.current.onended = () => {\n      setIsPlaying(false);\n      setIsBotSpeaking(false);\n      URL.revokeObjectURL(audioUrl);\n    };\n  };\n  const stopAudio = () => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n      setIsPlaying(false);\n      setIsBotSpeaking(false);\n    }\n  };\n  const formatTime = date => {\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const getListeningStateDisplay = () => {\n    switch (listeningState) {\n      case 'ambient':\n        return {\n          text: 'Always Listening',\n          color: 'text-blue-600',\n          bgColor: 'bg-blue-50',\n          icon: EyeIcon\n        };\n      case 'active':\n        return {\n          text: 'Conversation Active',\n          color: 'text-green-600',\n          bgColor: 'bg-green-50',\n          icon: MicrophoneIcon\n        };\n      default:\n        return {\n          text: 'Not Listening',\n          color: 'text-gray-600',\n          bgColor: 'bg-gray-50',\n          icon: EyeSlashIcon\n        };\n    }\n  };\n\n  // Dynamic background based on mood/energy\n  const getBackgroundClass = () => {\n    const base = darkMode ? 'bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900' : 'bg-gradient-to-br from-blue-50 via-purple-50 to-pink-50';\n    switch (botMood) {\n      case 'excited':\n        return darkMode ? 'bg-gradient-to-br from-purple-900 via-pink-900 to-orange-900' : 'bg-gradient-to-br from-yellow-100 via-orange-100 to-pink-100';\n      case 'calm':\n        return darkMode ? 'bg-gradient-to-br from-blue-900 via-indigo-900 to-purple-900' : 'bg-gradient-to-br from-blue-100 via-indigo-100 to-purple-100';\n      case 'thinking':\n        return darkMode ? 'bg-gradient-to-br from-gray-800 via-slate-800 to-gray-900' : 'bg-gradient-to-br from-gray-100 via-slate-100 to-gray-200';\n      default:\n        return base;\n    }\n  };\n\n  // Animated Bot Avatar Component\n  const BotAvatar = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center h-full p-8\",\n    children: [/*#__PURE__*/_jsxDEV(motion.div, {\n      className: `relative w-48 h-48 rounded-full flex items-center justify-center mb-6 ${darkMode ? 'bg-gradient-to-br from-blue-600 to-purple-700' : 'bg-gradient-to-br from-blue-500 to-purple-600'}`,\n      animate: {\n        scale: isBotSpeaking ? [1, 1.05, 1] : [1, 1.02, 1],\n        rotate: listeningState === 'active' ? [0, 2, -2, 0] : 0\n      },\n      transition: {\n        scale: {\n          duration: 2,\n          repeat: Infinity,\n          ease: \"easeInOut\"\n        },\n        rotate: {\n          duration: 3,\n          repeat: Infinity,\n          ease: \"easeInOut\"\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"absolute inset-4 rounded-full bg-white/20 backdrop-blur-sm\",\n        animate: {\n          opacity: isBotSpeaking ? [0.3, 0.7, 0.3] : [0.2, 0.4, 0.2]\n        },\n        transition: {\n          duration: 1.5,\n          repeat: Infinity,\n          ease: \"easeInOut\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-6\",\n        children: [/*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"w-6 h-12 bg-white rounded-full\",\n          animate: {\n            scaleY: isBotSpeaking ? [1, 0.3, 1] : [1, 0.8, 1]\n          },\n          transition: {\n            duration: 2,\n            repeat: Infinity,\n            ease: \"easeInOut\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"w-6 h-12 bg-white rounded-full\",\n          animate: {\n            scaleY: isBotSpeaking ? [1, 0.3, 1] : [1, 0.8, 1]\n          },\n          transition: {\n            duration: 2,\n            repeat: Infinity,\n            ease: \"easeInOut\",\n            delay: 0.1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: (isBotSpeaking || listeningState === 'active') && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(motion.div, {\n            className: \"absolute inset-0 rounded-full border-2 border-white/30\",\n            initial: {\n              scale: 1,\n              opacity: 0.6\n            },\n            animate: {\n              scale: 1.5,\n              opacity: 0\n            },\n            exit: {\n              opacity: 0\n            },\n            transition: {\n              duration: 1.5,\n              repeat: Infinity,\n              ease: \"easeOut\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n            className: \"absolute inset-0 rounded-full border-2 border-white/20\",\n            initial: {\n              scale: 1,\n              opacity: 0.4\n            },\n            animate: {\n              scale: 2,\n              opacity: 0\n            },\n            exit: {\n              opacity: 0\n            },\n            transition: {\n              duration: 2,\n              repeat: Infinity,\n              ease: \"easeOut\",\n              delay: 0.3\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      className: `text-center ${darkMode ? 'text-white' : 'text-gray-800'}`,\n      animate: {\n        opacity: [0.7, 1, 0.7]\n      },\n      transition: {\n        duration: 2,\n        repeat: Infinity,\n        ease: \"easeInOut\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-2\",\n        children: [\"Hi \", (user === null || user === void 0 ? void 0 : user.name) || 'there', \"! \\uD83D\\uDC4B\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg opacity-80\",\n        children: listeningState === 'active' ? 'I\\'m listening...' : isBotSpeaking ? 'Speaking...' : isAmbientListening ? 'Say \"Hey Buddy\" to chat!' : 'Ready to chat!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 text-4xl\",\n      children: [botMood === 'excited' && '🤗', botMood === 'calm' && '😌', botMood === 'thinking' && '🤔', botMood === 'friendly' && '😊']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 555,\n    columnNumber: 5\n  }, this);\n\n  // Live Transcript Component\n  const LiveTranscript = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `h-full flex flex-col ${darkMode ? 'bg-gray-800 text-white' : 'bg-white text-gray-900'} border-l ${darkMode ? 'border-gray-700' : 'border-gray-200'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex-shrink-0 p-4 border-b ${darkMode ? 'border-gray-700 bg-gray-900' : 'border-gray-200 bg-gray-50'}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(ChatBubbleLeftEllipsisIcon, {\n            className: `w-6 h-6 ${darkMode ? 'text-blue-400' : 'text-blue-600'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold\",\n            children: \"Live Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setDarkMode(!darkMode),\n          className: `p-2 rounded-full transition-colors ${darkMode ? 'bg-gray-700 text-yellow-400 hover:bg-gray-600' : 'bg-gray-100 text-gray-600 hover:bg-gray-200'}`,\n          children: darkMode ? /*#__PURE__*/_jsxDEV(SunIcon, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(MoonIcon, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 59\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto p-4 space-y-4\",\n      children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-6xl mb-4\",\n          children: \"\\uD83C\\uDF99\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: `text-lg font-semibold mb-2 ${darkMode ? 'text-gray-200' : 'text-gray-800'}`,\n          children: \"Start Talking!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `${darkMode ? 'text-gray-400' : 'text-gray-600'} mb-6`,\n          children: \"Your conversation will appear here in real-time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col space-y-2\",\n          children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(motion.button, {\n            onClick: () => setTextInput(suggestion),\n            className: `px-4 py-2 rounded-full text-sm transition-colors ${darkMode ? 'bg-blue-900 text-blue-200 hover:bg-blue-800' : 'bg-blue-50 text-blue-600 hover:bg-blue-100'}`,\n            whileHover: {\n              scale: 1.02\n            },\n            whileTap: {\n              scale: 0.98\n            },\n            children: suggestion\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: messages.map(message => /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            y: 20\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          },\n          exit: {\n            opacity: 0,\n            y: -20\n          },\n          className: `flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"max-w-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `px-4 py-3 rounded-2xl ${message.type === 'user' ? darkMode ? 'bg-gradient-to-r from-blue-600 to-purple-700 text-white' : 'bg-gradient-to-r from-blue-500 to-purple-600 text-white' : darkMode ? 'bg-gray-700 text-gray-100' : 'bg-gray-100 text-gray-900'}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-start space-x-2\",\n                children: [message.type === 'ai' && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xl\",\n                  children: \"\\uD83E\\uDD16\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 724,\n                  columnNumber: 25\n                }, this), message.type === 'user' && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xl\",\n                  children: \"\\uD83D\\uDC76\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 727,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm leading-relaxed\",\n                  children: message.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 729,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 722,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between mt-1 px-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: `text-xs ${darkMode ? 'text-gray-400' : 'text-gray-500'}`,\n                children: formatTime(message.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 735,\n                columnNumber: 21\n              }, this), message.audioData && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => playAudio(message.audioData),\n                className: `p-1 rounded transition-colors ${darkMode ? 'text-blue-400 hover:text-blue-300 hover:bg-gray-700' : 'text-blue-500 hover:text-blue-600 hover:bg-blue-50'}`,\n                children: /*#__PURE__*/_jsxDEV(SpeakerWaveIcon, {\n                  className: \"w-4 h-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 748,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 740,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 17\n          }, this)\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 11\n      }, this), currentTranscript && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 10\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        className: \"flex justify-end\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `max-w-sm px-4 py-2 rounded-2xl border-2 border-dashed ${darkMode ? 'border-blue-500 bg-blue-900/20 text-blue-200' : 'border-blue-300 bg-blue-50 text-blue-800'}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm italic\",\n            children: currentTranscript\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 760,\n        columnNumber: 11\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        className: \"flex justify-start\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `px-4 py-3 rounded-2xl ${darkMode ? 'bg-gray-700' : 'bg-gray-100'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xl\",\n              children: \"\\uD83E\\uDD16\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 786,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex space-x-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `w-2 h-2 rounded-full animate-bounce ${darkMode ? 'bg-blue-400' : 'bg-blue-500'}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 788,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `w-2 h-2 rounded-full animate-bounce ${darkMode ? 'bg-blue-400' : 'bg-blue-500'}`,\n                style: {\n                  animationDelay: '0.1s'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 791,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `w-2 h-2 rounded-full animate-bounce ${darkMode ? 'bg-blue-400' : 'bg-blue-500'}`,\n                style: {\n                  animationDelay: '0.2s'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 794,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 787,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `text-sm ${darkMode ? 'text-gray-300' : 'text-gray-600'}`,\n              children: \"Thinking...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 798,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 785,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 777,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex-shrink-0 p-4 border-t ${darkMode ? 'border-gray-700 bg-gray-900' : 'border-gray-200 bg-gray-50'}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1\",\n          children: /*#__PURE__*/_jsxDEV(TextInput, {\n            onSendMessage: sendTextMessage,\n            isLoading: isLoading,\n            darkMode: darkMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 814,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 813,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(VoiceControl, {\n          onStartAmbientListening: startAmbientListening,\n          onStopAmbientListening: stopAmbientListening,\n          darkMode: darkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 811,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 647,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `h-full ${getBackgroundClass()} transition-all duration-1000`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-2 h-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center min-h-96 lg:min-h-full\",\n        children: /*#__PURE__*/_jsxDEV(BotAvatar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 839,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-full min-h-96 lg:min-h-full\",\n        children: /*#__PURE__*/_jsxDEV(LiveTranscript, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 836,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 834,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"j6zUiZUnqUHZty9q25uEMs69X4o=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","motion","AnimatePresence","MicrophoneIcon","StopIcon","PaperAirplaneIcon","SpeakerWaveIcon","SpeakerXMarkIcon","SparklesIcon","ChatBubbleLeftEllipsisIcon","EyeIcon","EyeSlashIcon","SunIcon","MoonIcon","Cog6ToothIcon","toast","TextInput","VoiceControl","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatInterface","user","darkMode","setDarkMode","sessionId","onSendMessage","_s","isAmbientListening","setIsAmbientListening","isConversationActive","setIsConversationActive","isRecording","setIsRecording","isPlaying","setIsPlaying","textInput","setTextInput","messages","setMessages","isLoading","setIsLoading","listeningState","setListeningState","wakeWordDetected","setWakeWordDetected","isBotSpeaking","setIsBotSpeaking","currentTranscript","setCurrentTranscript","botMood","setBotMood","mediaRecorderRef","audioChunksRef","messagesEndRef","audioRef","ambientRecorderRef","ambientIntervalRef","suggestions","scrollToBottom","console","log","stopAmbientListening","current","clearInterval","_messagesEndRef$curre","scrollIntoView","behavior","startAmbientListening","stream","id","response","fetch","process","env","REACT_APP_BACKEND_URL","method","headers","body","JSON","stringify","session_id","user_id","ok","startContinuousAudioProcessing","success","errorData","json","error","Error","detail","stop","MediaRecorder","mimeType","ondataavailable","event","data","size","processAmbientAudio","start","setInterval","setTimeout","audioData","base64Audio","reader","FileReader","Promise","resolve","onloadend","result","split","sendAudioToBackend","readAsDataURL","audio_base64","handleAmbientResponse","warn","status","transcript","listening_state","conversation_response","has_response","prevState","wakeWordMessage","Date","now","type","content","timestamp","prev","aiMessage","response_text","response_audio","playAudio","userMessage","endMessage","startRecording","navigator","mediaDevices","getUserMedia","audio","push","onstop","audioBlob","Blob","sendVoiceMessage","getTracks","forEach","track","stopRecording","isVoice","contentType","content_type","metadata","sendTextMessage","e","preventDefault","trim","messageContent","message","pause","Uint8Array","from","atob","c","charCodeAt","audioUrl","URL","createObjectURL","Audio","play","onended","revokeObjectURL","stopAudio","currentTime","formatTime","date","toLocaleTimeString","hour","minute","getListeningStateDisplay","text","color","bgColor","icon","getBackgroundClass","base","BotAvatar","className","children","div","animate","scale","rotate","transition","duration","repeat","Infinity","ease","opacity","fileName","_jsxFileName","lineNumber","columnNumber","scaleY","delay","initial","exit","name","LiveTranscript","onClick","length","map","suggestion","index","button","whileHover","whileTap","y","style","animationDelay","ref","onStartAmbientListening","onStopAmbientListening","_c","$RefreshReg$"],"sources":["/app/frontend/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  MicrophoneIcon, \n  StopIcon, \n  PaperAirplaneIcon,\n  SpeakerWaveIcon,\n  SpeakerXMarkIcon,\n  SparklesIcon,\n  ChatBubbleLeftEllipsisIcon,\n  EyeIcon,\n  EyeSlashIcon,\n  SunIcon,\n  MoonIcon,\n  Cog6ToothIcon\n} from '@heroicons/react/24/outline';\nimport toast from 'react-hot-toast';\nimport TextInput from './TextInput';\nimport VoiceControl from './VoiceControl';\n\nconst ChatInterface = ({ user, darkMode, setDarkMode, sessionId, onSendMessage }) => {\n  const [isAmbientListening, setIsAmbientListening] = useState(false);\n  const [isConversationActive, setIsConversationActive] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [textInput, setTextInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [listeningState, setListeningState] = useState('inactive'); // inactive, ambient, active\n  const [wakeWordDetected, setWakeWordDetected] = useState(false);\n  const [isBotSpeaking, setIsBotSpeaking] = useState(false);\n  const [currentTranscript, setCurrentTranscript] = useState('');\n  const [botMood, setBotMood] = useState('friendly'); // friendly, excited, calm, thinking\n  \n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const messagesEndRef = useRef(null);\n  const audioRef = useRef(null);\n  const ambientRecorderRef = useRef(null);\n  const ambientIntervalRef = useRef(null);\n\n  const suggestions = [\n    \"Tell me a story\",\n    \"Sing a song\", \n    \"What's a fun fact?\",\n    \"Let's play a game\",\n    \"Help me learn something\"\n  ];\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  useEffect(() => {\n    console.log('🎯 ChatInterface component mounted - NOT auto-starting ambient listening');\n    \n    // Don't auto-start ambient listening - wait for user gesture\n    setListeningState('inactive');\n    \n    // Cleanup on unmount\n    return () => {\n      stopAmbientListening();\n      if (ambientIntervalRef.current) {\n        clearInterval(ambientIntervalRef.current);\n      }\n    };\n  }, []);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const startAmbientListening = async (stream) => {\n    try {\n      console.log('🎤 Starting ambient listening with provided stream...');\n      console.log('User ID:', user?.id);\n      console.log('Session ID:', sessionId);\n      \n      // Start ambient listening on server\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/ambient/start`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          session_id: sessionId,\n          user_id: user?.id || user?.user_id || 'test_user'\n        })\n      });\n\n      if (response.ok) {\n        setIsAmbientListening(true);\n        setListeningState('ambient');\n        \n        // Start continuous audio processing with the provided stream\n        startContinuousAudioProcessing(stream);\n        \n        toast.success('🎤 Voice activated! Say \"Hey Buddy\" to start chatting.');\n        console.log('✅ Ambient listening started successfully');\n        return true; // Return success\n      } else {\n        const errorData = await response.json();\n        console.error('❌ Server error starting ambient listening:', errorData);\n        throw new Error(`Failed to start ambient listening: ${errorData.detail || 'Unknown error'}`);\n      }\n    } catch (error) {\n      console.error('❌ Error starting ambient listening:', error);\n      setListeningState('inactive');\n      toast.error('Failed to start voice features. Please try again.');\n      return false; // Return failure\n    }\n  };\n\n  const stopAmbientListening = async () => {\n    try {\n      await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/ambient/stop`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          session_id: sessionId\n        })\n      });\n\n      setIsAmbientListening(false);\n      setIsConversationActive(false);\n      setListeningState('inactive');\n      \n      // Stop audio processing\n      if (ambientRecorderRef.current) {\n        ambientRecorderRef.current.stop();\n      }\n      \n      if (ambientIntervalRef.current) {\n        clearInterval(ambientIntervalRef.current);\n      }\n    } catch (error) {\n      console.error('Error stopping ambient listening:', error);\n    }\n  };\n\n  // Stop continuous audio processing to prevent re-renders\n  const startContinuousAudioProcessing = (stream) => {\n    console.log('🎤 Starting continuous audio processing...');\n    \n    ambientRecorderRef.current = new MediaRecorder(stream, {\n      mimeType: 'audio/webm;codecs=opus'\n    });\n\n    ambientRecorderRef.current.ondataavailable = (event) => {\n      if (event.data.size > 0) {\n        // Only process audio if we're still in ambient listening mode\n        if (isAmbientListening && listeningState === 'ambient') {\n          processAmbientAudio(event.data);\n        }\n      }\n    };\n\n    ambientRecorderRef.current.start(2000); // 2-second chunks\n    \n    // Set up interval to restart recording (prevent memory issues)\n    ambientIntervalRef.current = setInterval(() => {\n      if (ambientRecorderRef.current && isAmbientListening) {\n        try {\n          ambientRecorderRef.current.stop();\n          setTimeout(() => {\n            if (ambientRecorderRef.current && isAmbientListening) {\n              ambientRecorderRef.current.start(2000);\n            }\n          }, 100);\n        } catch (error) {\n          console.error('Error restarting recorder:', error);\n        }\n      }\n    }, 10000); // Restart every 10 seconds instead of processing continuously\n  };\n\n  const processAmbientAudio = async (audioData) => {\n    try {\n      let base64Audio;\n      \n      // Handle different audio data types\n      if (typeof audioData === 'string') {\n        base64Audio = audioData;\n      } else {\n        // Convert Blob to base64\n        const reader = new FileReader();\n        return new Promise((resolve) => {\n          reader.onloadend = async () => {\n            base64Audio = reader.result.split(',')[1];\n            await sendAudioToBackend(base64Audio);\n            resolve();\n          };\n          reader.readAsDataURL(audioData);\n        });\n      }\n      \n      await sendAudioToBackend(base64Audio);\n    } catch (error) {\n      console.error('Error processing ambient audio:', error);\n    }\n  };\n  \n  const sendAudioToBackend = async (base64Audio) => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/ambient/process`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          session_id: sessionId,\n          audio_base64: base64Audio\n        })\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        handleAmbientResponse(data);\n      } else {\n        console.warn('Ambient processing request failed:', response.status);\n      }\n    } catch (error) {\n      console.error('Error sending audio to backend:', error);\n    }\n  };\n\n  const handleAmbientResponse = (data) => {\n    const { status, transcript, listening_state, conversation_response, has_response } = data;\n    \n    // Only update listening state if it has changed\n    setListeningState(prevState => {\n      if (prevState !== listening_state) {\n        return listening_state;\n      }\n      return prevState;\n    });\n    \n    if (status === 'wake_word_detected') {\n      setWakeWordDetected(true);\n      setIsConversationActive(true);\n      \n      // Add wake word message\n      const wakeWordMessage = {\n        id: Date.now(),\n        type: 'system',\n        content: `Wake word detected: \"${transcript}\"`,\n        timestamp: new Date()\n      };\n      \n      setMessages(prev => [...prev, wakeWordMessage]);\n      \n      // Add AI response if available\n      if (has_response && conversation_response) {\n        const aiMessage = {\n          id: Date.now() + 1,\n          type: 'ai',\n          content: conversation_response.response_text,\n          audioData: conversation_response.response_audio,\n          timestamp: new Date()\n        };\n        \n        setMessages(prev => [...prev, aiMessage]);\n        \n        // Play audio response\n        if (conversation_response.response_audio) {\n          playAudio(conversation_response.response_audio);\n        }\n      }\n      \n      // Clear wake word detection after 3 seconds\n      setTimeout(() => setWakeWordDetected(false), 3000);\n      \n    } else if (status === 'conversation_active' && has_response) {\n      // Add user message\n      const userMessage = {\n        id: Date.now(),\n        type: 'user',\n        content: transcript,\n        timestamp: new Date()\n      };\n      \n      setMessages(prev => [...prev, userMessage]);\n      \n      // Add AI response\n      const aiMessage = {\n        id: Date.now() + 1,\n        type: 'ai',\n        content: conversation_response.response_text,\n        audioData: conversation_response.response_audio,\n        timestamp: new Date()\n      };\n      \n      setMessages(prev => [...prev, aiMessage]);\n      \n      // Play audio response\n      if (conversation_response.response_audio) {\n        playAudio(conversation_response.response_audio);\n      }\n      \n    } else if (status === 'conversation_ended' || status === 'conversation_timeout') {\n      setIsConversationActive(false);\n      \n      const endMessage = {\n        id: Date.now(),\n        type: 'system',\n        content: status === 'conversation_timeout' ? 'Conversation timed out. Say \"Hey Buddy\" to start again.' : 'Conversation ended. Say \"Hey Buddy\" to start again.',\n        timestamp: new Date()\n      };\n      \n      setMessages(prev => [...prev, endMessage]);\n    }\n  };\n\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      audioChunksRef.current = [];\n\n      mediaRecorderRef.current.ondataavailable = (event) => {\n        audioChunksRef.current.push(event.data);\n      };\n\n      mediaRecorderRef.current.onstop = () => {\n        const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/wav' });\n        sendVoiceMessage(audioBlob);\n        stream.getTracks().forEach(track => track.stop());\n      };\n\n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n    } catch (error) {\n      toast.error('Microphone access denied');\n    }\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n    }\n  };\n\n  const sendVoiceMessage = async (audioBlob) => {\n    const reader = new FileReader();\n    reader.onloadend = async () => {\n      const base64Audio = reader.result.split(',')[1];\n      \n      const userMessage = {\n        id: Date.now(),\n        type: 'user',\n        content: 'Voice message',\n        isVoice: true,\n        timestamp: new Date()\n      };\n\n      setMessages(prev => [...prev, userMessage]);\n      setIsLoading(true);\n\n      try {\n        const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/conversations/voice`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            session_id: sessionId,\n            user_id: user.id,\n            audio_base64: base64Audio\n          })\n        });\n\n        const data = await response.json();\n        \n        if (response.ok) {\n          const aiMessage = {\n            id: Date.now() + 1,\n            type: 'ai',\n            content: data.response_text,\n            audioData: data.response_audio,\n            contentType: data.content_type,\n            metadata: data.metadata,\n            timestamp: new Date()\n          };\n\n          setMessages(prev => [...prev, aiMessage]);\n          \n          // Auto-play AI response\n          if (data.response_audio) {\n            playAudio(data.response_audio);\n          }\n        } else {\n          throw new Error(data.detail || 'Failed to send voice message');\n        }\n      } catch (error) {\n        toast.error('Failed to send voice message');\n        console.error('Voice message error:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    reader.readAsDataURL(audioBlob);\n  };\n\n  const sendTextMessage = async (e) => {\n    e.preventDefault();\n    if (!textInput.trim() || isLoading) return;\n\n    // Store the message content before clearing\n    const messageContent = textInput.trim();\n    \n    const userMessage = {\n      id: Date.now(),\n      type: 'user',\n      content: messageContent,\n      isVoice: false,\n      timestamp: new Date()\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setTextInput(''); // Clear input after storing the message\n    setIsLoading(true);\n\n    try {\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/conversations/text`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          session_id: sessionId,\n          user_id: user.id,\n          message: messageContent // Use stored message content\n        })\n      });\n\n      const data = await response.json();\n      \n      if (response.ok) {\n        const aiMessage = {\n          id: Date.now() + 1,\n          type: 'ai',\n          content: data.response_text,\n          audioData: data.response_audio,\n          contentType: data.content_type,\n          metadata: data.metadata,\n          timestamp: new Date()\n        };\n\n        setMessages(prev => [...prev, aiMessage]);\n        \n        // Auto-play AI response\n        if (data.response_audio) {\n          playAudio(data.response_audio);\n        }\n      } else {\n        throw new Error(data.detail || 'Failed to send message');\n      }\n    } catch (error) {\n      toast.error('Failed to send message');\n      console.error('Text message error:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const playAudio = (base64Audio) => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n    }\n    \n    const audioBlob = new Blob([Uint8Array.from(atob(base64Audio), c => c.charCodeAt(0))], { type: 'audio/wav' });\n    const audioUrl = URL.createObjectURL(audioBlob);\n    \n    audioRef.current = new Audio(audioUrl);\n    audioRef.current.play();\n    setIsPlaying(true);\n    setIsBotSpeaking(true);\n    \n    audioRef.current.onended = () => {\n      setIsPlaying(false);\n      setIsBotSpeaking(false);\n      URL.revokeObjectURL(audioUrl);\n    };\n  };\n\n  const stopAudio = () => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n      setIsPlaying(false);\n      setIsBotSpeaking(false);\n    }\n  };\n\n  const formatTime = (date) => {\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n\n  const getListeningStateDisplay = () => {\n    switch (listeningState) {\n      case 'ambient':\n        return {\n          text: 'Always Listening',\n          color: 'text-blue-600',\n          bgColor: 'bg-blue-50',\n          icon: EyeIcon\n        };\n      case 'active':\n        return {\n          text: 'Conversation Active',\n          color: 'text-green-600',\n          bgColor: 'bg-green-50',\n          icon: MicrophoneIcon\n        };\n      default:\n        return {\n          text: 'Not Listening',\n          color: 'text-gray-600',\n          bgColor: 'bg-gray-50',\n          icon: EyeSlashIcon\n        };\n    }\n  };\n\n  // Dynamic background based on mood/energy\n  const getBackgroundClass = () => {\n    const base = darkMode \n      ? 'bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900'\n      : 'bg-gradient-to-br from-blue-50 via-purple-50 to-pink-50';\n    \n    switch(botMood) {\n      case 'excited':\n        return darkMode \n          ? 'bg-gradient-to-br from-purple-900 via-pink-900 to-orange-900'\n          : 'bg-gradient-to-br from-yellow-100 via-orange-100 to-pink-100';\n      case 'calm':\n        return darkMode \n          ? 'bg-gradient-to-br from-blue-900 via-indigo-900 to-purple-900'\n          : 'bg-gradient-to-br from-blue-100 via-indigo-100 to-purple-100';\n      case 'thinking':\n        return darkMode \n          ? 'bg-gradient-to-br from-gray-800 via-slate-800 to-gray-900'\n          : 'bg-gradient-to-br from-gray-100 via-slate-100 to-gray-200';\n      default:\n        return base;\n    }\n  };\n\n  // Animated Bot Avatar Component\n  const BotAvatar = () => (\n    <div className=\"flex flex-col items-center justify-center h-full p-8\">\n      {/* Main Avatar Circle */}\n      <motion.div\n        className={`relative w-48 h-48 rounded-full flex items-center justify-center mb-6 ${\n          darkMode ? 'bg-gradient-to-br from-blue-600 to-purple-700' : 'bg-gradient-to-br from-blue-500 to-purple-600'\n        }`}\n        animate={{\n          scale: isBotSpeaking ? [1, 1.05, 1] : [1, 1.02, 1],\n          rotate: listeningState === 'active' ? [0, 2, -2, 0] : 0,\n        }}\n        transition={{\n          scale: { duration: 2, repeat: Infinity, ease: \"easeInOut\" },\n          rotate: { duration: 3, repeat: Infinity, ease: \"easeInOut\" }\n        }}\n      >\n        {/* Inner Glow Effect */}\n        <motion.div \n          className=\"absolute inset-4 rounded-full bg-white/20 backdrop-blur-sm\"\n          animate={{\n            opacity: isBotSpeaking ? [0.3, 0.7, 0.3] : [0.2, 0.4, 0.2]\n          }}\n          transition={{ duration: 1.5, repeat: Infinity, ease: \"easeInOut\" }}\n        />\n        \n        {/* Eyes */}\n        <div className=\"flex space-x-6\">\n          <motion.div \n            className=\"w-6 h-12 bg-white rounded-full\"\n            animate={{\n              scaleY: isBotSpeaking ? [1, 0.3, 1] : [1, 0.8, 1]\n            }}\n            transition={{ duration: 2, repeat: Infinity, ease: \"easeInOut\" }}\n          />\n          <motion.div \n            className=\"w-6 h-12 bg-white rounded-full\"\n            animate={{\n              scaleY: isBotSpeaking ? [1, 0.3, 1] : [1, 0.8, 1]\n            }}\n            transition={{ duration: 2, repeat: Infinity, ease: \"easeInOut\", delay: 0.1 }}\n          />\n        </div>\n\n        {/* Voice Rings */}\n        <AnimatePresence>\n          {(isBotSpeaking || listeningState === 'active') && (\n            <>\n              <motion.div\n                className=\"absolute inset-0 rounded-full border-2 border-white/30\"\n                initial={{ scale: 1, opacity: 0.6 }}\n                animate={{ scale: 1.5, opacity: 0 }}\n                exit={{ opacity: 0 }}\n                transition={{ duration: 1.5, repeat: Infinity, ease: \"easeOut\" }}\n              />\n              <motion.div\n                className=\"absolute inset-0 rounded-full border-2 border-white/20\"\n                initial={{ scale: 1, opacity: 0.4 }}\n                animate={{ scale: 2, opacity: 0 }}\n                exit={{ opacity: 0 }}\n                transition={{ duration: 2, repeat: Infinity, ease: \"easeOut\", delay: 0.3 }}\n              />\n            </>\n          )}\n        </AnimatePresence>\n      </motion.div>\n\n      {/* Status Text */}\n      <motion.div\n        className={`text-center ${darkMode ? 'text-white' : 'text-gray-800'}`}\n        animate={{ opacity: [0.7, 1, 0.7] }}\n        transition={{ duration: 2, repeat: Infinity, ease: \"easeInOut\" }}\n      >\n        <h2 className=\"text-2xl font-bold mb-2\">Hi {user?.name || 'there'}! 👋</h2>\n        <p className=\"text-lg opacity-80\">\n          {listeningState === 'active' ? 'I\\'m listening...' : \n           isBotSpeaking ? 'Speaking...' :\n           isAmbientListening ? 'Say \"Hey Buddy\" to chat!' : \n           'Ready to chat!'}\n        </p>\n      </motion.div>\n\n      {/* Mood Emojis */}\n      <div className=\"mt-6 text-4xl\">\n        {botMood === 'excited' && '🤗'}\n        {botMood === 'calm' && '😌'}\n        {botMood === 'thinking' && '🤔'}\n        {botMood === 'friendly' && '😊'}\n      </div>\n    </div>\n  );\n\n  // Live Transcript Component\n  const LiveTranscript = () => (\n    <div className={`h-full flex flex-col ${darkMode ? 'bg-gray-800 text-white' : 'bg-white text-gray-900'} border-l ${darkMode ? 'border-gray-700' : 'border-gray-200'}`}>\n      {/* Transcript Header */}\n      <div className={`flex-shrink-0 p-4 border-b ${darkMode ? 'border-gray-700 bg-gray-900' : 'border-gray-200 bg-gray-50'}`}>\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <ChatBubbleLeftEllipsisIcon className={`w-6 h-6 ${darkMode ? 'text-blue-400' : 'text-blue-600'}`} />\n            <h3 className=\"text-lg font-semibold\">Live Chat</h3>\n          </div>\n          \n          {/* Theme Toggle */}\n          <button\n            onClick={() => setDarkMode(!darkMode)}\n            className={`p-2 rounded-full transition-colors ${\n              darkMode ? 'bg-gray-700 text-yellow-400 hover:bg-gray-600' : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n            }`}\n          >\n            {darkMode ? <SunIcon className=\"w-5 h-5\" /> : <MoonIcon className=\"w-5 h-5\" />}\n          </button>\n        </div>\n      </div>\n\n      {/* Messages Area */}\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n        {messages.length === 0 ? (\n          <div className=\"text-center py-8\">\n            <div className=\"text-6xl mb-4\">🎙️</div>\n            <h4 className={`text-lg font-semibold mb-2 ${darkMode ? 'text-gray-200' : 'text-gray-800'}`}>\n              Start Talking!\n            </h4>\n            <p className={`${darkMode ? 'text-gray-400' : 'text-gray-600'} mb-6`}>\n              Your conversation will appear here in real-time\n            </p>\n            \n            {/* Quick Suggestions */}\n            <div className=\"flex flex-col space-y-2\">\n              {suggestions.map((suggestion, index) => (\n                <motion.button\n                  key={index}\n                  onClick={() => setTextInput(suggestion)}\n                  className={`px-4 py-2 rounded-full text-sm transition-colors ${\n                    darkMode \n                      ? 'bg-blue-900 text-blue-200 hover:bg-blue-800' \n                      : 'bg-blue-50 text-blue-600 hover:bg-blue-100'\n                  }`}\n                  whileHover={{ scale: 1.02 }}\n                  whileTap={{ scale: 0.98 }}\n                >\n                  {suggestion}\n                </motion.button>\n              ))}\n            </div>\n          </div>\n        ) : (\n          <AnimatePresence>\n            {messages.map((message) => (\n              <motion.div\n                key={message.id}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                exit={{ opacity: 0, y: -20 }}\n                className={`flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}\n              >\n                <div className=\"max-w-sm\">\n                  {/* Message Bubble */}\n                  <div\n                    className={`px-4 py-3 rounded-2xl ${\n                      message.type === 'user'\n                        ? darkMode \n                          ? 'bg-gradient-to-r from-blue-600 to-purple-700 text-white'\n                          : 'bg-gradient-to-r from-blue-500 to-purple-600 text-white'\n                        : darkMode\n                        ? 'bg-gray-700 text-gray-100'\n                        : 'bg-gray-100 text-gray-900'\n                    }`}\n                  >\n                    <div className=\"flex items-start space-x-2\">\n                      {message.type === 'ai' && (\n                        <span className=\"text-xl\">🤖</span>\n                      )}\n                      {message.type === 'user' && (\n                        <span className=\"text-xl\">👶</span>\n                      )}\n                      <p className=\"text-sm leading-relaxed\">{message.content}</p>\n                    </div>\n                  </div>\n                  \n                  {/* Message Actions */}\n                  <div className=\"flex items-center justify-between mt-1 px-2\">\n                    <span className={`text-xs ${darkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                      {formatTime(message.timestamp)}\n                    </span>\n                    \n                    {message.audioData && (\n                      <button\n                        onClick={() => playAudio(message.audioData)}\n                        className={`p-1 rounded transition-colors ${\n                          darkMode \n                            ? 'text-blue-400 hover:text-blue-300 hover:bg-gray-700' \n                            : 'text-blue-500 hover:text-blue-600 hover:bg-blue-50'\n                        }`}\n                      >\n                        <SpeakerWaveIcon className=\"w-4 h-4\" />\n                      </button>\n                    )}\n                  </div>\n                </div>\n              </motion.div>\n            ))}\n          </AnimatePresence>\n        )}\n        \n        {/* Current Transcript Preview */}\n        {currentTranscript && (\n          <motion.div\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"flex justify-end\"\n          >\n            <div className={`max-w-sm px-4 py-2 rounded-2xl border-2 border-dashed ${\n              darkMode \n                ? 'border-blue-500 bg-blue-900/20 text-blue-200' \n                : 'border-blue-300 bg-blue-50 text-blue-800'\n            }`}>\n              <p className=\"text-sm italic\">{currentTranscript}</p>\n            </div>\n          </motion.div>\n        )}\n        \n        {/* Loading Animation */}\n        {isLoading && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            className=\"flex justify-start\"\n          >\n            <div className={`px-4 py-3 rounded-2xl ${\n              darkMode ? 'bg-gray-700' : 'bg-gray-100'\n            }`}>\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-xl\">🤖</span>\n                <div className=\"flex space-x-1\">\n                  <div className={`w-2 h-2 rounded-full animate-bounce ${\n                    darkMode ? 'bg-blue-400' : 'bg-blue-500'\n                  }`}></div>\n                  <div className={`w-2 h-2 rounded-full animate-bounce ${\n                    darkMode ? 'bg-blue-400' : 'bg-blue-500'\n                  }`} style={{ animationDelay: '0.1s' }}></div>\n                  <div className={`w-2 h-2 rounded-full animate-bounce ${\n                    darkMode ? 'bg-blue-400' : 'bg-blue-500'\n                  }`} style={{ animationDelay: '0.2s' }}></div>\n                </div>\n                <span className={`text-sm ${darkMode ? 'text-gray-300' : 'text-gray-600'}`}>\n                  Thinking...\n                </span>\n              </div>\n            </div>\n          </motion.div>\n        )}\n        \n        <div ref={messagesEndRef} />\n      </div>\n\n      {/* Text Input Area */}\n      <div className={`flex-shrink-0 p-4 border-t ${darkMode ? 'border-gray-700 bg-gray-900' : 'border-gray-200 bg-gray-50'}`}>\n        <div className=\"flex items-center justify-between space-x-4\">\n          {/* Isolated Text Input Component */}\n          <div className=\"flex-1\">\n            <TextInput \n              onSendMessage={sendTextMessage} \n              isLoading={isLoading}\n              darkMode={darkMode}\n            />\n          </div>\n          \n          {/* Voice Control Component */}\n          <VoiceControl \n            onStartAmbientListening={startAmbientListening}\n            onStopAmbientListening={stopAmbientListening}\n            darkMode={darkMode}\n          />\n        </div>\n      </div>\n\n    </div>\n  );\n\n  return (\n    <div className={`h-full ${getBackgroundClass()} transition-all duration-1000`}>\n      {/* Modern 2-Panel Layout */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 h-full\">\n        {/* Left Panel - Animated Bot Avatar */}\n        <div className=\"flex items-center justify-center min-h-96 lg:min-h-full\">\n          <BotAvatar />\n        </div>\n\n        {/* Right Panel - Live Transcript */}\n        <div className=\"h-full min-h-96 lg:min-h-full\">\n          <LiveTranscript />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatInterface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}